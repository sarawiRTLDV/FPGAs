library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;


entity UART is 

	port(
		CLOCK_50: in std_logic;
		SW: IN std_logic_vector(9 downto 0);
		KEY: in std_logic_vector(3 downto 0);
		LEDR: out std_logic_vector(9 downto 0);
		LEDG: out std_logic_vector(7 downto 0);
		UART_TXD: out std_logic;
		UART_RXD: in std_logic
	);
end UART;

architecture main of UART is 
component TX is 
port(
	CLK: IN std_logic;
	START: IN std_logic;
	BUSY: out std_logic;
	DATA: IN std_logic_vector(7 downto 0);
	TX_LINE: OUT std_logic
);
end component;


signal TX_DATA: std_logic_vector(7 downto 0);
signal TX_START: std_logic:= '0';
signal TX_BUSY: std_logic;
begin
	
	C1: TX port map (CLOCK_50, TX_START, TX_BUSY, TX_DATA, UART_TXD);
	process(CLOCK_50)
		begin
		if(rising_edge(CLOCK_50)) then
			if(KEY(0) = '0' and TX_BUSY = '0') then
				TX_DATA <= SW(7 downto 0);
				TX_START <= '1';
				LEDG <= TX_DATA;
				else
				TX_START <= '0';
			end if;	
		end if;
	end process;
	
end main;